{"instruction": "Initialize a new resume with resumed CLI", "input": "Command: resumed init", "output": "Done! Start editing resume.json now, and run the render command when you are ready. 👍"}
{"instruction": "Initialize a new resume with a custom filename", "input": "Command: resumed init custom_resume.json", "output": "Done! Start editing custom_resume.json now, and run the render command when you are ready. 👍"}
{"instruction": "Render a resume using a specified theme", "input": "Command: resumed render --theme jsonresume-theme-even", "output": "You can find your rendered resume at resume.html. Nice work! 🚀"}
{"instruction": "Render a resume from a custom JSON file", "input": "Command: resumed render custom_resume.json --theme jsonresume-theme-even", "output": "You can find your rendered resume at resume.html. Nice work! 🚀"}
{"instruction": "Render a resume with a custom output filename", "input": "Command: resumed render --theme jsonresume-theme-even --output my_resume.html", "output": "You can find your rendered resume at my_resume.html. Nice work! 🚀"}
{"instruction": "Validate a resume using resumed CLI", "input": "Command: resumed validate", "output": "Your resume.json looks amazing! ✨"}
{"instruction": "Validate a resume with a custom filename", "input": "Command: resumed validate custom_resume.json", "output": "Your custom_resume.json looks amazing! ✨"}
{"instruction": "Render a resume without specifying a theme", "input": "Command: resumed render", "output": "No theme to use. Please specify one via the --theme option or the .meta.theme field of your resume."}
{"instruction": "Render a resume with an uninstalled theme", "input": "Command: resumed render --theme jsonresume-theme-missing", "output": "Could not load theme jsonresume-theme-missing. Is it installed?"}
{"instruction": "Render a resume using the Node.js API", "input": "Code snippet:\\nimport { promises as fs } from 'fs'\\nimport * as theme from 'jsonresume-theme-even'\\nimport { render } from 'resumed'\\nconst resume = JSON.parse(await fs.readFile('resume.json', 'utf-8'))\\nconst html = await render(resume, theme)\\nawait fs.writeFile('resume.html', html)", "output": "The resume has been rendered to resume.html using the specified theme."}
{"instruction": "Initialize a new resume with resumed CLI", "input": "Command: resumed init", "output": "Done! Start editing resume.json now, and run the render command when you are ready. 👍"}
{"instruction": "Initialize a new resume with a custom filename", "input": "Command: resumed init custom_resume.json", "output": "Done! Start editing custom_resume.json now, and run the render command when you are ready. 👍"}
{"instruction": "Render a resume using a specified theme", "input": "Command: resumed render --theme jsonresume-theme-even", "output": "You can find your rendered resume at resume.html. Nice work! 🚀"}
{"instruction": "Render a resume from a custom JSON file", "input": "Command: resumed render custom_resume.json --theme jsonresume-theme-even", "output": "You can find your rendered resume at resume.html. Nice work! 🚀"}
{"instruction": "Render a resume with a custom output filename", "input": "Command: resumed render --theme jsonresume-theme-even --output my_resume.html", "output": "You can find your rendered resume at my_resume.html. Nice work! 🚀"}
{"instruction": "Validate a resume using resumed CLI", "input": "Command: resumed validate", "output": "Your resume.json looks amazing! ✨"}
{"instruction": "Validate a resume with a custom filename", "input": "Command: resumed validate custom_resume.json", "output": "Your custom_resume.json looks amazing! ✨"}
{"instruction": "Render a resume without specifying a theme", "input": "Command: resumed render", "output": "No theme to use. Please specify one via the --theme option or the .meta.theme field of your resume."}
{"instruction": "Render a resume with an uninstalled theme", "input": "Command: resumed render --theme jsonresume-theme-missing", "output": "Could not load theme jsonresume-theme-missing. Is it installed?"}
{"instruction": "Render a resume using the Node.js API", "input": "Code snippet:\\nimport { promises as fs } from 'fs'\\nimport * as theme from 'jsonresume-theme-even'\\nimport { render } from 'resumed'\\nconst resume = JSON.parse(await fs.readFile('resume.json', 'utf-8'))\\nconst html = await render(resume, theme)\\nawait fs.writeFile('resume.html', html)", "output": "The resume has been rendered to resume.html using the specified theme."}
{"instruction": "What is the main purpose of the 'resumed' tool?", "input": "", "output": "`resumed` is a lightweight command-line tool and Node.js API designed for building resumes based on the JSON Resume standard. It serves as a smaller, focused alternative to the original `resume-cli`."}
{"instruction": "How do I install the `resumed` CLI?", "input": "", "output": "You can install `resumed` using npm. You also need to install a theme separately. For example, to install `resumed` and the 'even' theme, run: `npm install resumed jsonresume-theme-even`."}
{"instruction": "List the available commands for the `resumed` CLI.", "input": "", "output": "The available commands are: `render` (default command, alias `export`) to render the resume, `init` (alias `create`) to create a sample resume file, and `validate` to validate the resume against the schema. You can get help for any command using the `--help` flag, e.g., `resumed render --help`."}
{"instruction": "How do I create a new sample `resume.json` file using `resumed`?", "input": "", "output": "Use the `init` command: `resumed init`. This will create a `resume.json` file in the current directory based on the official JSON Resume sample. You can optionally specify a different filename, like `resumed init myresume.json`."}
{"instruction": "Explain how to render a resume using `resumed`.", "input": "", "output": "To render a resume, use the `render` command: `resumed render [filename] [options]`. By default, it reads `resume.json` and outputs `resume.html`. You *must* specify a theme using either the `-t` or `--theme` option (e.g., `resumed render --theme jsonresume-theme-even`) or by including a `meta: { \"theme\": \"theme-package-name\" }` field in your `resume.json` file. You can specify a different output file using `-o` or `--output` (e.g., `resumed render -o myresume.html --theme jsonresume-theme-even`)."}
{"instruction": "Does `resumed` come with a default theme?", "input": "", "output": "No, `resumed` does not install or bundle any default theme. You must explicitly install a theme of your choice (e.g., via npm) and specify it using the `--theme` option or the `.meta.theme` field in your `resume.json`."}
{"instruction": "How do I initialize a resume using resumed CLI?", "input": "I want to create a new resume sample.", "output": "Run `resumed init` to create a sample resume file named resume.json by default."}
{"instruction": "How do I initialize a resume with a custom filename?", "input": "I want to name my resume file differently.", "output": "Use `resumed init custom_resume.json` to create a resume with a custom filename."}
{"instruction": "How do I render my resume to HTML?", "input": "I already have my resume.json ready.", "output": "Run `resumed render --theme jsonresume-theme-even` to generate an HTML version of your resume."}
{"instruction": "How can I specify a different theme for rendering?", "input": "I want to use a local theme.", "output": "You can pass your theme using the `--theme` option, e.g., `resumed render --theme jsonresume-theme-local`."}
{"instruction": "What does the --output option do?", "input": "I need to change the output filename.", "output": "The `--output` option lets you specify the name of the rendered file, e.g., `--output my_resume.html`."}
{"instruction": "How do I validate my resume?", "input": "I want to ensure my resume conforms to the schema.", "output": "Run `resumed validate` to check your resume.json against the JSON Resume schema."}
{"instruction": "How do I check the CLI version?", "input": "I want to know which version is installed.", "output": "Use `resumed --version` or `resumed -v` to display the current version of resumed."}
{"instruction": "What happens if I don't specify a theme in the render command?", "input": "I forgot to set a theme.", "output": "The CLI will output an error asking you to specify a theme via the `--theme` option or the .meta.theme field in your resume."}
{"instruction": "How do I use the Node.js API of resumed?", "input": "I want to integrate resume rendering into my Node.js project.", "output": "Import the `render` function from resumed and use it with your resume object and a theme module. See the with-node-api example for details."}
{"instruction": "What is the purpose of the resumed CLI tool?", "input": "I need an overview of its functionality.", "output": "Resumed is a lightweight CLI and Node.js API tool for building, rendering, and validating JSON Resume documents."}
{"instruction": "How can I use a JSON Resume theme with resumed?", "input": "I want to render my resume with a theme.", "output": "Install a JSON Resume theme like jsonresume-theme-even and pass it using the `--theme` option in the render command."}
{"instruction": "How do I get help with resumed commands?", "input": "I'm unsure about the command usage.", "output": "Run `resumed --help` to display the help message with all available commands and options."}
{"instruction": "What commands does resumed offer?", "input": "I want to know my options.", "output": "Resumed offers commands such as `init` to create a sample resume, `render` to generate output, and `validate` to check your resume."}
{"instruction": "How can I view examples of resumed usage?", "input": "I want to see practical usage examples.", "output": "Check the examples directory in the resumed repository for usage with JSON Resume themes, local themes, Node API, and PDF export."}
{"instruction": "How do I run a resume rendering with comments in JSON?", "input": "My JSON file contains comments.", "output": "Resumed uses strip-json-comments to parse your JSON. Simply run `resumed render --theme jsonresume-theme-even` even if your file contains comments."}
{"instruction": "How do I report errors in my resume validation?", "input": "I got validation errors and need details.", "output": "The `resumed validate` command will list all schema validation errors with messages and the corresponding JSON paths."}
{"instruction": "How can I run resumed programmatically in a Node.js script?", "input": "I want to automate resume rendering.", "output": "Import resumed functions (like `render`, `init`, and `validate`) into your script and call them with your resume data."}
{"instruction": "How do I handle theme loading errors?", "input": "I encountered a theme loading error.", "output": "If the theme cannot be loaded, resumed will output an error message suggesting you verify the theme's installation and specification."}
{"instruction": "What is the default filename for a new resume?", "input": "I want to know the default output.", "output": "The default filename when running `resumed init` is resume.json."}
{"instruction": "How do I set a theme within my resume file?", "input": "I prefer to set the theme in the JSON.", "output": "Add a `.meta.theme` field in your resume.json file to specify the theme for rendering."}
{"instruction": "Can I render my resume without installing a theme?", "input": "I don't have a theme installed yet.", "output": "No, you must install and specify a theme either via the CLI option or in your resume file."}
{"instruction": "How do I install resumed via npm?", "input": "I want to use resumed in my project.", "output": "Run `npm install resumed` to install the CLI globally or locally in your project."}
{"instruction": "How do I add a JSON Resume theme to my project?", "input": "I need a theme for rendering.", "output": "Install a theme such as jsonresume-theme-even by running `npm install jsonresume-theme-even`."}
{"instruction": "Can I use local themes with resumed?", "input": "I have a custom theme in my project.", "output": "Yes, you can use a local theme by specifying its path or package name with the `--theme` option."}
{"instruction": "What is the purpose of the init command in resumed?", "input": "I am new to resumed.", "output": "The `init` command creates a sample resume file (resume.json) that you can then customize."}
{"instruction": "How does resumed ensure the JSON Resume schema is followed?", "input": "I want to validate my resume structure.", "output": "Resumed validates your resume.json against the JSON Resume schema to ensure that required fields are correctly formatted."}
{"instruction": "How do I update my resume file after initialization?", "input": "I want to edit my resume.", "output": "Open the resume.json file in your favorite editor and update the content as needed."}
{"instruction": "What should I do if my resume fails validation?", "input": "I received validation errors.", "output": "Review the error messages provided by `resumed validate` and adjust your resume.json accordingly."}
{"instruction": "How can I customize the rendered HTML output?", "input": "I want to change my resume's look.", "output": "Customize your theme or choose a different one to change the look and feel of your rendered resume."}
{"instruction": "Is resumed compatible with asynchronous rendering?", "input": "I have async rendering needs.", "output": "Yes, resumed supports asynchronous rendering; themes can implement async render functions."}
{"instruction": "How do I run resumed in watch mode?", "input": "I want automatic updates when editing my resume.", "output": "Resumed doesn't have a built-in watch mode, but you can use tools like nodemon to monitor changes and re-run commands."}
{"instruction": "What are the benefits of using resumed over resume-cli?", "input": "I want to know why to choose resumed.", "output": "Resumed is lightweight, built with modern technologies, and offers a fully-tested Node.js API with TypeScript support."}
{"instruction": "How do I integrate resumed with my CI workflow?", "input": "I want automated resume validation.", "output": "Integrate commands like `resumed validate` into your CI pipeline to automatically check your resume file against the schema."}
{"instruction": "Can I use resumed for non-JSON resumes?", "input": "I have a YAML resume file.", "output": "No, resumed is designed for JSON Resume files; you need to convert your resume to JSON format."}
{"instruction": "How does resumed handle JSON comments?", "input": "My resume file includes comments.", "output": "Resumed uses the strip-json-comments library, so it can parse JSON files that contain comments."}
{"instruction": "Can I use resumed both via CLI and programmatically?", "input": "I need flexibility in usage.", "output": "Yes, resumed provides a command-line interface and a Node.js API for programmatic usage."}
{"instruction": "How do I add custom resume fields?", "input": "I want to extend my resume beyond the schema.", "output": "While resumed validates against the JSON Resume schema, you can add custom fields if needed, though validation may flag them."}
{"instruction": "What is the role of the cli.ts file in resumed?", "input": "I see multiple source files.", "output": "The cli.ts file defines the command-line interface commands and links them to the underlying init, render, and validate functions."}
{"instruction": "How can I contribute a new feature to resumed?", "input": "I want to help improve the tool.", "output": "Fork the resumed repository on GitHub, implement your changes, and submit a pull request following the contribution guidelines."}
{"instruction": "How do I update my installed resumed version?", "input": "I want the latest features.", "output": "Run `npm update resumed` or reinstall it using npm to update to the latest version."}
{"instruction": "Does resumed support PDF export natively?", "input": "I want to create a PDF resume.", "output": "No, resumed does not support PDF export natively. You can integrate it with Puppeteer to generate PDFs."}
{"instruction": "What is the difference between resume-cli and resumed?", "input": "I want to compare the two tools.", "output": "Resumed is a reimplementation of resume-cli using modern technologies, focusing on simplicity and a small footprint."}
{"instruction": "How do I run resumed with a specific Node.js version?", "input": "I'm managing multiple Node versions.", "output": "Use a version manager like nvm to select the desired Node.js version before running resumed commands."}
{"instruction": "Can I run resumed commands on Windows?", "input": "I'm using a Windows machine.", "output": "Yes, resumed is platform-independent and works on Windows, macOS, and Linux."}
{"instruction": "How do I debug issues with resumed CLI?", "input": "I encountered unexpected behavior.", "output": "Increase logging in the source code or use Node.js debugging tools to troubleshoot issues with resumed."}
{"instruction": "How is the theme module loaded in resumed?", "input": "I want to know the internal process.", "output": "Resumed uses dynamic import to load the theme module specified via the CLI or in your resume file."}
{"instruction": "How do I use a custom theme located on my local disk?", "input": "I have a theme in a local folder.", "output": "Specify the local theme path with the `--theme` option, e.g., `resumed render --theme ./path/to/theme`."}
{"instruction": "What does the init command do under the hood?", "input": "I am curious about the implementation.", "output": "The `init` command uses the sample resume from @jsonresume/schema and writes it to a file, typically resume.json."}
{"instruction": "How do I customize the CLI's help messages?", "input": "I want to change the help output.", "output": "The help messages are defined in cli.ts using the sade library; modify them in the source code to customize."}
{"instruction": "Can I run resumed commands in a CI/CD pipeline?", "input": "I want to automate resume checks.", "output": "Yes, include commands like `resumed validate` in your CI/CD pipeline to automatically check your resume."}
{"instruction": "What dependencies does resumed rely on?", "input": "I want to know the main libraries.", "output": "Resumed uses libraries such as sade for CLI management, strip-json-comments for parsing, and yoctocolors for colored output."}
{"instruction": "How do I ensure my resume file is correctly formatted?", "input": "I want to avoid validation errors.", "output": "After editing, run `resumed validate` to ensure your resume.json conforms to the JSON Resume schema."}
{"instruction": "Can resumed be integrated with version control workflows?", "input": "I need to track resume changes.", "output": "Yes, since resumed works with JSON files, you can easily track changes using Git or other version control systems."}
{"instruction": "How do I handle large resume files with resumed?", "input": "My resume has many entries.", "output": "Resumed can process large JSON files as long as they conform to the schema; performance is generally not an issue."}
{"instruction": "How does resumed deal with asynchronous theme rendering?", "input": "My theme uses async functions.", "output": "Resumed awaits the theme's render function, so asynchronous processing is fully supported."}
{"instruction": "Can I override default settings in resumed?", "input": "I want to change the defaults.", "output": "Defaults are set within cli.ts; you can modify them in the source code if you need different behavior."}
{"instruction": "How do I integrate resumed into a build process?", "input": "I want automated resume generation.", "output": "Include resumed commands in your build scripts (e.g., npm scripts) to automate rendering and validation."}
{"instruction": "What is the purpose of the .meta.theme field in a resume file?", "input": "I see a .meta.theme field in examples.", "output": "The .meta.theme field specifies which theme to use for rendering so that you don’t have to pass it via the CLI."}
{"instruction": "How do I extend resumed with additional commands?", "input": "I want to add a new feature.", "output": "You can fork the repository and add new commands in cli.ts using the sade library to define additional options."}
{"instruction": "How do I contribute documentation for resumed?", "input": "I want to help improve docs.", "output": "Contributions to documentation are welcome. Fork the repository, update the docs, and submit a pull request."}
{"instruction": "Can resumed be used with non-standard resume schemas?", "input": "I have a custom resume structure.", "output": "Resumed is built around the JSON Resume schema; using a non-standard schema may require custom modifications."}
{"instruction": "How do I report bugs in resumed?", "input": "I found an issue with the CLI.", "output": "Submit an issue on the GitHub repository with detailed information so maintainers can reproduce and fix the bug."}
{"instruction": "What is the role of the render.ts file in resumed?", "input": "I want to understand the code structure.", "output": "The render.ts file contains the function that calls the theme's render method to generate the resume output."}
{"instruction": "How does resumed ensure code quality?", "input": "I'm interested in testing.", "output": "Resumed has 100% code coverage and uses Vitest for testing to ensure the CLI and API work reliably."}
{"instruction": "How do I change the JSON parsing behavior in resumed?", "input": "I need custom JSON parsing.", "output": "The JSON parsing is handled in cli.ts using node:fs/promises and strip-json-comments; changes require modifying that file."}
{"instruction": "Can I use resumed with Docker?", "input": "I want to containerize my resume generation.", "output": "Yes, you can run resumed in a Docker container by installing Node.js and your dependencies within the container."}
{"instruction": "How do I customize the color output in the CLI?", "input": "I don't like the default colors.", "output": "The colors are managed by yoctocolors. To change them, modify the source code in cli.ts."}
{"instruction": "How does resumed handle invalid JSON syntax?", "input": "My resume file has syntax errors.", "output": "If the JSON is invalid, resumed will throw a parsing error. Validate your JSON using a linter or validator first."}
{"instruction": "What happens if required fields are missing in the resume?", "input": "My resume is incomplete.", "output": "The validation command will report errors if required fields from the JSON Resume schema are missing."}
{"instruction": "How do I add a custom command to resumed?", "input": "I want to extend the CLI.", "output": "Modify the cli.ts file to add a new command using the sade library, then implement your desired functionality."}
{"instruction": "Can I run resumed in a headless environment?", "input": "I need to run it on a server without a GUI.", "output": "Yes, resumed is a command-line tool and works perfectly in headless environments like servers."}
{"instruction": "How do I update the JSON Resume schema in resumed?", "input": "I need the latest schema changes.", "output": "Update the @jsonresume/schema dependency in your project to incorporate any new schema changes."}
{"instruction": "How do I ensure compatibility between resumed and my theme?", "input": "I want to avoid rendering issues.", "output": "Verify that your theme implements the expected render interface and is compatible with your version of resumed."}
{"instruction": "What is the file structure of the resumed project?", "input": "I want to understand the source layout.", "output": "Resumed’s source is organized in the src directory (cli.ts, init.ts, render.ts, validate.ts) with tests in the test directory."}
{"instruction": "How do I customize error handling in resumed?", "input": "I want more robust error messages.", "output": "Modify the error handling in cli.ts and other source files to output custom messages as needed."}
{"instruction": "How do I integrate resumed with my text editor?", "input": "I want to run commands directly from my editor.", "output": "Most modern text editors support running shell commands; configure tasks to run resumed commands directly from your editor."}
{"instruction": "How does resumed handle asynchronous file operations?", "input": "I'm curious about its async behavior.", "output": "Resumed uses node:fs/promises for asynchronous file operations, ensuring non-blocking execution."}
{"instruction": "Can I use resumed in combination with other resume tools?", "input": "I want to integrate multiple tools.", "output": "Yes, you can use resumed to generate HTML and then pass it to other tools for further processing."}
{"instruction": "How do I configure resumed for a CI environment?", "input": "I want to run resume checks automatically.", "output": "Set up your CI pipeline to execute commands like `resumed validate` and `resumed render` to automate resume processing."}
{"instruction": "How do I override default file paths in resumed?", "input": "I want to change where resume.json is read from.", "output": "Specify a custom filename as an argument to commands, for example: `resumed render custom.json`."}
{"instruction": "How do I access the rendered HTML output?", "input": "I need to know where my file is saved.", "output": "The rendered HTML is saved to resume.html by default, or to the file specified using the --output option."}
{"instruction": "How does resumed ensure portability across platforms?", "input": "I use multiple operating systems.", "output": "Resumed is built with Node.js, making it platform-independent and runnable on Windows, macOS, and Linux."}
{"instruction": "How do I include custom fonts or styles in my resume?", "input": "I want a personalized design.", "output": "Customize your theme to include custom fonts and styles using CSS or inline styles in the theme's render function."}
{"instruction": "How do I debug the resume rendering process?", "input": "I want to troubleshoot rendering issues.", "output": "Insert console logs in your theme's render function or run resumed in a debug mode to inspect the process."}
{"instruction": "Can I extend resumed to support additional output formats?", "input": "I need more than HTML.", "output": "Yes, by modifying the render function or adding new commands, you can extend resumed to support formats like PDF or Markdown."}
{"instruction": "How does resumed manage dependencies?", "input": "I'm interested in its package management.", "output": "Resumed uses npm for dependency management and is built as a pure ESM package for modern JavaScript compatibility."}
{"instruction": "What steps should I take after running `resumed init`?", "input": "I just created a sample resume.", "output": "Edit the generated resume.json file with your personal details and then run `resumed render` to generate the final output."}
{"instruction": "How do I view the rendered resume in a browser?", "input": "I want to open the HTML file.", "output": "Locate the generated resume.html file and open it in your web browser to view your rendered resume."}
{"instruction": "How do I ensure my resume meets accessibility standards?", "input": "I want to make my resume accessible.", "output": "Review your rendered resume and consider using accessible HTML practices; some themes may also include accessibility features."}
{"instruction": "What is the role of the package.json file in resumed?", "input": "I want to know how it relates to the CLI.", "output": "The package.json file defines project metadata, dependencies, and scripts, including those used for CLI command configurations."}
{"instruction": "How do I run resumed commands in verbose mode?", "input": "I need more detailed output.", "output": "Resumed does not have a verbose flag by default; you can add additional logging in the source code if required."}
{"instruction": "How do I add a custom theme to the resumed theme search?", "input": "I want my theme to be discoverable.", "output": "Publish your theme as an npm package with a name like jsonresume-theme-yourtheme, then install and use it with the `--theme` option."}
{"instruction": "What security considerations should I have when using resumed?", "input": "I am concerned about security.", "output": "Ensure your resume file comes from a trusted source, keep dependencies updated, and review any custom code for vulnerabilities."}
{"instruction": "How do I automate resume rendering on file changes?", "input": "I want live updates.", "output": "Use file watcher tools like nodemon to monitor your resume file and automatically run `resumed render` on changes."}
{"instruction": "Can resumed be used with TypeScript projects?", "input": "I am working in TypeScript.", "output": "Yes, resumed is written in TypeScript and comes with typings, making it ideal for TypeScript projects."}
{"instruction": "How does resumed handle synchronous vs asynchronous operations?", "input": "I want to understand its operation.", "output": "Resumed uses asynchronous functions for file operations and theme rendering to ensure non-blocking performance."}
{"instruction": "How do I use resumed with a custom build system?", "input": "I want to integrate it into my workflow.", "output": "Include resumed commands in your custom build scripts or automation tools to generate and validate your resume."}
{"instruction": "What is the benefit of using a CLI tool like resumed for resume creation?", "input": "I want to know why to use it.", "output": "Resumed provides a streamlined, programmatic approach to creating, rendering, and validating resumes, easily integrating into development workflows."}
{"instruction": "How do I change the default output directory in resumed?", "input": "I want the rendered file in a different folder.", "output": "Resumed writes to the current working directory by default; you can modify the source code or move the file after rendering."}
{"instruction": "How do I create a backup of my resume using resumed?", "input": "I want to keep a copy before editing.", "output": "Manually copy the resume.json file or write a script to duplicate it before running `resumed init` or `resumed render`."}
{"instruction": "How does resumed handle different JSON formats?", "input": "I have a JSON file with extra fields.", "output": "Resumed expects the JSON Resume schema; extra fields may be ignored during validation unless they cause conflicts."}
{"instruction": "What customization options are available for the render command?", "input": "I want to tweak rendering.", "output": "You can customize the output by selecting different themes or modifying a theme’s render function to suit your design."}
{"instruction": "How do I integrate resumed with a CI server like Jenkins?", "input": "I want automated resume checks.", "output": "Include `resumed validate` and `resumed render` commands in your Jenkins build scripts to automate resume processing."}
{"instruction": "How do I use environment variables with resumed?", "input": "I want to configure settings dynamically.", "output": "Resumed does not natively support environment variables, but you can modify the source to read from process.env if needed."}
{"instruction": "How can I extend resumed to support new file formats?", "input": "I want to add Markdown support.", "output": "Extend the render function or add a new command to convert your JSON Resume into another format such as Markdown."}
{"instruction": "How do I check for available themes when using resumed?", "input": "I want to see what themes I have installed.", "output": "There is no built-in command to list themes; check your package.json dependencies or search npm for jsonresume themes."}
{"instruction": "How do I override the default behavior of resumed's validation?", "input": "I want custom validation rules.", "output": "Customize the validation logic in validate.ts; note that changes may affect compatibility with the JSON Resume schema."}
{"instruction": "How do I create a custom CLI flag for resumed?", "input": "I want additional options.", "output": "Modify cli.ts and use the sade library to define new flags and their behaviors."}
{"instruction": "How do I incorporate logging into resumed for better debugging?", "input": "I want to track the CLI operations.", "output": "Add logging statements in cli.ts or integrate a logging library to capture detailed debug information during execution."}
{"instruction": "How can I test my resume rendering locally before deployment?", "input": "I need a preview.", "output": "Run `resumed render` and open the generated HTML file in your browser to preview your resume."}
{"instruction": "How do I handle large JSON Resume files with many sections?", "input": "My resume is very detailed.", "output": "Ensure your file adheres to the JSON Resume schema; resumed will process the entire file regardless of size."}
{"instruction": "How does resumed handle file path resolution?", "input": "I want to know how files are read.", "output": "Resumed uses node:fs/promises and resolves file paths relative to the current working directory unless an absolute path is provided."}
{"instruction": "How do I integrate resumed with a custom theme previewer?", "input": "I want to see live theme changes.", "output": "Set up a development server that reloads on file changes, then run `resumed render` to update your preview automatically."}
{"instruction": "Can I use resumed to generate multiple resume formats at once?", "input": "I need HTML and PDF outputs.", "output": "Resumed generates HTML output; you can chain commands or use tools like Puppeteer to convert HTML to other formats."}
{"instruction": "How do I modify the default CLI output messages?", "input": "I want to customize feedback messages.", "output": "Edit the console.log statements in cli.ts to change the default messages displayed by resumed."}
{"instruction": "How do I ensure my resume file is backed up before rendering?", "input": "I want to prevent data loss.", "output": "Manually back up your resume.json file or automate a copy process before running `resumed render`."}
{"instruction": "How do I configure resumed to use a specific Node.js runtime?", "input": "I want to ensure compatibility.", "output": "Use a Node version manager like nvm to select the desired Node.js version before executing resumed commands."}
{"instruction": "How do I extend the JSON Resume schema for custom fields?", "input": "I need additional properties in my resume.", "output": "Extend the JSON Resume schema in your project, but note that resumed's validation may require adjustments to support these custom fields."}
{"instruction": "How do I use resumed with international resumes?", "input": "My resume contains non-English characters.", "output": "Resumed supports UTF-8 encoded JSON files, so international characters are handled correctly."}
{"instruction": "How do I integrate resumed with my Git hooks?", "input": "I want to validate my resume on commit.", "output": "Set up a Git pre-commit hook to run `resumed validate` ensuring your resume file is valid before committing."}
{"instruction": "How do I customize the sample resume generated by resumed init?", "input": "I want to change the default content.", "output": "After running `resumed init`, edit the generated resume.json file to replace the sample content with your own information."}
{"instruction": "How do I run resumed commands on a remote server?", "input": "I need to generate a resume on a remote machine.", "output": "Install Node.js and resumed on the remote server, then run the desired commands via SSH or a remote terminal."}
{"instruction": "How do I automate resume validation on file save?", "input": "I want instant feedback on changes.", "output": "Use a file watcher like nodemon or an editor plugin to run `resumed validate` automatically when you save changes to resume.json."}
{"instruction": "How do I include custom scripts in my package.json for resumed tasks?", "input": "I want shortcuts for commands.", "output": "Add scripts such as \"init\": \"resumed init\" or \"render\": \"resumed render --theme jsonresume-theme-even\" to your package.json for quick access."}
{"instruction": "How do I get started with resumed if I'm new to CLI tools?", "input": "I am unfamiliar with command-line tools.", "output": "Start by running `resumed --help` to view available commands, then try `resumed init` to generate a sample resume."}
{"instruction": "How do I manage dependencies for my resumed project?", "input": "I want to keep my project organized.", "output": "Use npm or yarn to manage your dependencies, ensuring you install resumed and any themes you intend to use."}
{"instruction": "How do I troubleshoot JSON parsing errors in resumed?", "input": "My resume file is not being read correctly.", "output": "Validate your JSON with a linter or validator to fix syntax errors before running resumed commands."}
{"instruction": "How do I integrate resumed into a larger web application?", "input": "I want resume rendering as part of my app.", "output": "Use the Node.js API provided by resumed to render resumes dynamically within your web application."}
{"instruction": "How do I customize the CLI's argument parsing?", "input": "I want to add new options.", "output": "Resumed uses the sade library for argument parsing; modify cli.ts to add or change command-line options as needed."}
{"instruction": "How do I create a plugin for resumed?", "input": "I want to extend its functionality.", "output": "Resumed does not have an official plugin system, but you can fork the project and add modular features to extend its functionality."}
{"instruction": "How do I change the default resume file name?", "input": "I don't want to use resume.json.", "output": "Pass a custom filename as an argument to the commands, e.g., `resumed init custom.json`."}
{"instruction": "How do I handle network-related issues when rendering resumes?", "input": "My rendering process is slow.", "output": "Resumed renders locally; if you are fetching remote assets, ensure your network connection is stable."}
{"instruction": "How do I generate a print-friendly version of my resume?", "input": "I want a resume suitable for printing.", "output": "Customize your theme to include print-specific CSS or generate a separate print-friendly version."}
{"instruction": "How do I embed fonts in my rendered resume?", "input": "I want custom typography.", "output": "Modify your theme to include @font-face rules or embed fonts directly in the HTML to achieve the desired typography."}
{"instruction": "How do I update the CLI documentation?", "input": "I want to contribute to the docs.", "output": "Edit the README.md and related documentation files in the resumed repository, then submit a pull request."}
{"instruction": "How do I generate a resume that includes interactive elements?", "input": "I want to add JavaScript to my resume.", "output": "While resumes are typically static, you can modify your theme to include interactive elements if desired."}
{"instruction": "How do I ensure compatibility with older Node.js versions?", "input": "I work in an environment with legacy Node versions.", "output": "Resumed targets modern Node.js; using older versions may require transpilation or polyfills."}
{"instruction": "How do I use resumed to export my resume as a static site?", "input": "I want my resume hosted as a webpage.", "output": "Render your resume with resumed to generate HTML, then host the file on any static site hosting service."}
{"instruction": "How do I integrate resumed with a static site generator?", "input": "I want to include my resume in a larger website.", "output": "Render your resume and incorporate the HTML output into your static site generator’s templates."}
{"instruction": "How do I set up automated tests for my resume using resumed?", "input": "I want to ensure continuous resume validity.", "output": "Integrate `resumed validate` into your test scripts to automatically check your resume for errors."}
{"instruction": "How do I add custom metadata to my resume?", "input": "I want to include additional information.", "output": "Add a `.meta` object in your resume.json to store custom options like theme selection."}
{"instruction": "How do I generate different versions of my resume?", "input": "I want multiple formats or content variations.", "output": "Create separate resume.json files for each version and run resumed commands on each to generate tailored outputs."}
{"instruction": "How do I localize my resume using resumed?", "input": "I need multiple language versions.", "output": "Include localized content in your resume.json and adjust your theme to support multilingual displays if necessary."}
{"instruction": "How do I handle custom date formats in my resume?", "input": "My resume dates are formatted differently.", "output": "Ensure your date formats adhere to the JSON Resume schema or modify your theme to display your preferred format."}
{"instruction": "How do I run resumed in a Docker container?", "input": "I want to containerize my resume generation.", "output": "Create a Dockerfile that installs Node.js, copies your resume and resumed project, and executes the desired resumed command."}
{"instruction": "How do I track changes in my resume over time?", "input": "I want version history.", "output": "Use Git or another version control system to track changes in your resume.json file over time."}
{"instruction": "How do I display custom error messages for validation failures?", "input": "I want user-friendly error messages.", "output": "Modify the error handling in validate.ts to output custom, user-friendly error messages based on validation results."}
{"instruction": "How do I include images in my resume?", "input": "I want to add a profile picture.", "output": "Add an image URL in the appropriate field in your resume.json and ensure your theme supports image display."}
{"instruction": "How do I handle references or recommendations in my resume?", "input": "I want to include references.", "output": "Add a references section to your resume.json per the schema and ensure your theme displays it appropriately."}
{"instruction": "How do I include languages in my resume?", "input": "I want to showcase language proficiency.", "output": "Include a languages array in your resume.json file with the languages you speak and your proficiency level."}
{"instruction": "How do I include interests or hobbies in my resume?", "input": "I want to add personal interests.", "output": "Add an interests array to your resume.json file to list hobbies or interests; some themes may choose to display them."}
{"instruction": "How do I use resumed to generate a responsive resume design?", "input": "I want my resume to look good on all devices.", "output": "Choose or modify a theme that implements responsive design principles to ensure your resume looks great on any device."}
{"instruction": "How do I include a portfolio section in my resume?", "input": "I want to showcase my work samples.", "output": "Add a portfolio section to your resume.json file with links and descriptions of your projects, ensuring your theme displays them."}
{"instruction": "How do I include contact information in my resume?", "input": "I want employers to reach me easily.", "output": "Include fields like email, phone, and location in the basics section of your resume.json, which are then displayed by your theme."}
{"instruction": "How do I generate a themed resume for a specific job application?", "input": "I want to tailor my resume.", "output": "Adjust your resume.json and select a theme that best reflects the style you want for that job, then run `resumed render`."}
{"instruction": "How do I use a custom command line alias for resumed?", "input": "I want a shortcut for the render command.", "output": "Set up an alias in your shell configuration, e.g., alias rr='resumed render --theme jsonresume-theme-even'."}
{"instruction": "How do I ensure consistent formatting in my resume?", "input": "I want a professional look.", "output": "Adhere to the JSON Resume schema and use a well-designed theme to maintain consistent formatting throughout your resume."}
{"instruction": "How do I troubleshoot theme compatibility issues with resumed?", "input": "My rendered resume looks off.", "output": "Verify that your theme implements the expected interface and is compatible with your resumed version; update or modify the theme if necessary."}
{"instruction": "How do I contribute to the resumed community?", "input": "I want to share my improvements.", "output": "Join the resumed GitHub repository, participate in discussions, and submit pull requests with your enhancements or fixes."}
{"instruction": "How do I provide feedback about resumed?", "input": "I have suggestions for improvements.", "output": "Submit your feedback via the GitHub issues page or community forums linked from the resumed repository."}
{"instruction": "How do I use resumed for rapid resume prototyping?", "input": "I want to quickly generate resume drafts.", "output": "Run `resumed init` to create a sample resume, then iteratively edit and render it to see your changes immediately."}
{"instruction": "How do I integrate resumed into my automated workflow?", "input": "I want to include it in my build scripts.", "output": "Add resumed commands like `resumed validate` and `resumed render` into your automation scripts to process your resume automatically."}
{"instruction": "How do I set up a development environment for customizing resumed themes?", "input": "I want to build my own theme.", "output": "Clone the resumed repository and your chosen theme repository, then work in your local environment to modify the theme as needed."}
{"instruction": "How do I ensure my rendered resume is accessible?", "input": "I want to follow web accessibility guidelines.", "output": "Choose or customize a theme that follows accessibility best practices and validate your rendered resume with accessibility tools."}
{"instruction": "How do I embed interactive elements in my resume using resumed?", "input": "I want a dynamic user experience.", "output": "While resumes are typically static, you can modify your theme to include interactive elements such as links or JavaScript-driven features."}
{"instruction": "How do I incorporate feedback from potential employers into my resume?", "input": "I want to iterate on my resume based on feedback.", "output": "Edit your resume.json to reflect the feedback and re-run `resumed render` to update your resume accordingly."}
{"instruction": "How do I generate a print-optimized version of my resume?", "input": "I need a resume suitable for printing.", "output": "Customize your theme to include a print stylesheet or generate a separate version optimized for print, then render with resumed."}
{"instruction": "How do I manage multiple versions of my resume using resumed?", "input": "I need different resumes for different roles.", "output": "Maintain separate resume.json files for each version and run resumed commands on each file to generate tailored outputs."}
{"instruction": "How do I include certifications and awards in my resume?", "input": "I want to showcase my achievements.", "output": "Add sections for certifications and awards to your resume.json, ensuring they are formatted according to the JSON Resume schema."}
{"instruction": "How do I customize the output of the resumed render command?", "input": "I want to tweak the final output.", "output": "Modify the render function in your chosen theme or adjust resumed's source code in render.ts to customize the HTML output."}
{"instruction": "How do I use resumed to build a portfolio website?", "input": "I want to showcase my resume online.", "output": "Render your resume with resumed and integrate the resulting HTML into a portfolio website or use a static site generator."}
{"instruction": "How do I generate a resume with a unique design using resumed?", "input": "I want my resume to stand out.", "output": "Select a distinctive theme or customize an existing one to create a unique design, then render your resume with resumed."}
{"instruction": "How do I integrate custom analytics into my resume webpage?", "input": "I want to track visits to my resume.", "output": "Modify your theme to include analytics scripts, then render the resume so that the analytics code is embedded in the HTML."}
{"instruction": "How do I share my rendered resume with others?", "input": "I need to distribute my resume.", "output": "After rendering, share the generated HTML file or host it on a web server to make it accessible to potential employers."}
{"instruction": "How do I update my resume content after making changes?", "input": "I want to reflect recent updates.", "output": "Edit your resume.json with the new information and re-run `resumed render` to generate the updated resume."}
{"instruction": "How do I ensure that my resume is professional and error-free?", "input": "I want to maintain high quality.", "output": "Use `resumed validate` to check for errors and review your resume content carefully before sharing."}
{"instruction": "How do I customize the CLI behavior of resumed for my workflow?", "input": "I need personalized CLI settings.", "output": "Modify the CLI source in cli.ts to tailor command behavior, default options, and output messages to suit your specific workflow."}
{"instruction": "How can I validate my `resume.json` file?", "input": "", "output": "Use the `validate` command: `resumed validate [filename]`. By default, it validates `resume.json`. If the file conforms to the JSON Resume schema, it will print a success message. If there are errors, it will list them with their corresponding paths in the JSON structure."}
{"instruction": "What are the main differences between `resumed` and the original `resume-cli`?", "input": "", "output": "`resumed` is a reimplementation focusing on being lightweight and modern (Pure ESM, smaller codebase). Key differences include: `resumed` requires explicit theme installation/specification (no default theme), lacks built-in PDF export, local preview server, and YAML support, but offers a Node.js API and has better test coverage."}
{"instruction": "Can `resumed` export my resume to PDF format directly?", "input": "", "output": "No, `resumed` does not have a built-in PDF export feature. However, the documentation provides an example (`examples/with-pdf-export`) showing how you can achieve this by using the `resumed` Node.js API to render the HTML, and then using a library like Puppeteer to convert the generated HTML to a PDF."}
{"instruction": "How do I specify which theme to use for rendering?", "input": "", "output": "You can specify the theme in two ways: 1. Using the command-line option `-t` or `--theme` followed by the theme package name (e.g., `resumed render --theme jsonresume-theme-even`). 2. Adding a `theme` property inside a `meta` object in your `resume.json` file (e.g., `\"meta\": { \"theme\": \"jsonresume-theme-even\" }`). The command-line option takes precedence if both are specified."}
{"instruction": "Describe how to use `resumed` with a local theme.", "input": "Context: `resumed/examples/with-local-theme`", "output": "You can use a local theme by installing it as a local dependency in your `package.json` (e.g., `\"dependencies\": { \"jsonresume-theme-local\": \"file:./theme\" }`) and then specifying the theme name (matching the dependency name) with the `--theme` option: `resumed --theme jsonresume-theme-local`. The local theme directory should contain at least an `index.js` file that exports a `render` function and a basic `package.json`."}
{"instruction": "Explain the purpose of the `examples/with-node-api` directory.", "input": "Context: `resumed/examples/with-node-api`", "output": "The `examples/with-node-api` directory demonstrates how to use `resumed` programmatically within a Node.js script, rather than using the command-line interface. It shows importing the `render` function from `resumed` and a theme package (`jsonresume-theme-even`), reading the `resume.json` file, and calling `render` to generate the HTML output, which is then written to a file (`resume.html`)."}
{"instruction": "What functionality is provided by `src/validate.ts`?", "input": "Context: `resumed/src/validate.ts`", "output": "The `src/validate.ts` file exports an async function `validate` that takes a filename as input. It reads the content of the file, parses it as JSON, and then uses the official `@jsonresume/schema` package's `validate` function to check if the JSON data conforms to the JSON Resume schema. It returns a promise that resolves if valid or rejects with an array of errors if invalid."}
{"instruction": "What does the test file `test/cli.test.ts` verify?", "input": "Context: `resumed/test/cli.test.ts`", "output": "The `test/cli.test.ts` file contains unit tests for the command-line interface logic defined in `src/cli.ts`. It tests the behavior of the `init`, `render`, and `validate` commands, including handling default arguments, custom filenames, options like `--theme` and `--output`, theme resolution (via option or `.meta.theme`), parsing resumes with comments, error handling for missing themes or invalid themes, and checking console output messages and exit codes."}
{"instruction": "My resume has comments in it (like // comment). Can `resumed render` handle this?", "input": "Context: `resumed/src/cli.ts` and `resumed/test/cli.test.ts`", "output": "Yes, `resumed render` can handle JSON files with comments. The `cli.ts` file uses the `strip-json-comments` library before parsing the JSON, so comments will be removed and won't cause parsing errors during the render process."}
{"instruction": "I ran `resumed render` without specifying a theme and got an error. Why?", "input": "Error message: `No theme to use. Please specify one via the --theme option or the .meta.theme field of your resume.`", "output": "This error occurs because `resumed` requires a theme to render the resume, but it couldn't find one specified. You need to either add the `--theme <theme-name>` option to your command or add a `meta: { \"theme\": \"<theme-name>\" }` field to your `resume.json` file. Make sure the theme you specify is also installed."}
{"instruction": "What is the alias for the `resumed render` command?", "input": "Context: `resumed/src/cli.ts`", "output": "The alias for the `resumed render` command is `export`."}
{"instruction": "What is the alias for the `resumed init` command?", "input": "Context: `resumed/src/cli.ts`", "output": "The alias for the `resumed init` command is `create`."}
{"instruction": "Where does the `resumed init` command get the sample resume content from?", "input": "Context: `resumed/src/init.ts`", "output": "The `resumed init` command requires the `sample.resume.json` file from the `@jsonresume/schema` package using Node.js's `createRequire` mechanism, as native ESM JSON imports are not standard yet. It then writes this sample content to the specified output file."}
{"instruction": "Summarize the features of `resumed` listed in the main README.", "input": "Context: `resumed/README.md`", "output": "`resumed` is highlighted for being small (~120 LOC), a Pure ESM package, offering both a CLI and Node.js API, providing TypeScript typings, supporting asynchronous theme rendering, and having 100% test coverage."}
{"instruction": "What is `resumed`?", "input": "", "output": "`resumed` is a lightweight command-line interface (CLI) tool and Node.js library designed to build resumes from data following the JSON Resume standard. It's presented as a modern, focused alternative to `resume-cli`."}
{"instruction": "How do I install `resumed` and a necessary theme like 'jsonresume-theme-even'?", "input": "", "output": "Use npm: `npm install resumed jsonresume-theme-even`. Remember that `resumed` requires you to install a theme separately; it doesn't come with a default one."}
{"instruction": "List all the primary commands available in the `resumed` CLI.", "input": "", "output": "The primary commands are `render` (or `export`), `init` (or `create`), and `validate`. You can get help on any command using the `--help` flag (e.g., `resumed render --help`)."}
{"instruction": "What does the `resumed init` command do?", "input": "", "output": "The `resumed init` command creates a sample `resume.json` file in your current directory (or a specified filename). This file is based on the official JSON Resume schema's sample and serves as a starting template."}
{"instruction": "Explain the purpose of the `resumed render` command.", "input": "", "output": "The `resumed render` command takes a `resume.json` file and uses a specified JSON Resume theme to generate an HTML representation of the resume. By default, it reads `resume.json` and writes to `resume.html`."}
{"instruction": "How do I specify the theme for the `resumed render` command?", "input": "", "output": "You must specify a theme either using the command-line option `-t <theme-name>` or `--theme <theme-name>`, or by adding a `meta: { \"theme\": \"<theme-name>\" }` field within your `resume.json` file. The theme package must be installed separately."}
{"instruction": "What is the function of the `resumed validate` command?", "input": "", "output": "The `resumed validate` command checks if your `resume.json` file (or a specified file) adheres to the official JSON Resume schema. It reports success or lists any validation errors found."}
{"instruction": "What is the default input filename for `resumed render` and `resumed validate`?", "input": "", "output": "The default input filename for both `render` and `validate` commands is `resume.json` in the current working directory."}
{"instruction": "What is the default output filename for `resumed render`?", "input": "", "output": "The default output filename for the `render` command is `resume.html`."}
{"instruction": "How can I change the output filename when rendering?", "input": "", "output": "Use the `-o` or `--output` option followed by the desired filename, for example: `resumed render --theme <theme-name> -o my-custom-resume.html`."}
{"instruction": "Compare `resumed` with `resume-cli`.", "input": "", "output": "`resumed` is a smaller, modern (Pure ESM) reimplementation of `resume-cli`. It lacks features like a default theme, built-in PDF export, YAML support, and a local preview server found in `resume-cli`. However, `resumed` offers a Node.js API, explicit theme handling, and focuses on the core tasks of initializing, validating, and rendering JSON Resumes to HTML."}
{"instruction": "Does `resumed` support exporting resumes to PDF?", "input": "", "output": "No, `resumed` does not have built-in PDF export functionality. To generate a PDF, you need to use `resumed` to render the HTML first (either via CLI or Node.js API) and then use a separate tool like Puppeteer to convert the HTML file to PDF. The project provides an example for this (`examples/with-pdf-export`)."}
{"instruction": "Can I use comments in my `resume.json` file?", "input": "", "output": "Yes, `resumed` uses `strip-json-comments` before parsing the resume file, so you can include JavaScript-style comments (e.g., `// This is a comment`) in your `resume.json` without causing errors during processing."}
{"instruction": "How does `resumed` handle themes? Does it install them automatically?", "input": "", "output": "`resumed` does not install themes automatically. You must install your chosen theme using a package manager like npm (e.g., `npm install jsonresume-theme-even`). You then tell `resumed` which theme to use via the `--theme` option or the `.meta.theme` field in your resume file."}
{"instruction": "Explain how to use `resumed` with a local theme directory.", "input": "Context: `examples/with-local-theme`", "output": "To use a local theme, first set it up as a local Node.js package (with at least `package.json` and `index.js` exporting a `render` function). Then, install it as a file dependency in your project's `package.json` (e.g., `\"dependencies\": { \"my-local-theme\": \"file:./path/to/theme\" }`). Finally, run `resumed render --theme my-local-theme`."}
{"instruction": "Describe how to use the `resumed` Node.js API.", "input": "Context: `examples/with-node-api`", "output": "You can use `resumed` programmatically by importing its functions. For rendering, import `render` from `resumed` and your chosen theme module. Read and parse your `resume.json` data, then call `await render(resumeObject, themeModule)`. This returns the rendered HTML string. Similar programmatic access might be possible for `init` and `validate` by importing them from `./index.js`."}
{"instruction": "What should I do if I get the error 'Could not load theme <theme-name>. Is it installed?'", "input": "Error: `Could not load theme my-awesome-theme. Is it installed?`", "output": "This error indicates `resumed` couldn't find or import the specified theme. Check these things: 1. Did you install the theme using npm (`npm install my-awesome-theme`)? 2. Is the theme name spelled correctly in your command (`--theme my-awesome-theme`) or in your `resume.json`'s `.meta.theme` field? 3. If it's a local theme, is the path correct and the package set up properly?"}
{"instruction": "What does a validation error message from `resumed validate` typically look like?", "input": "Context: `test/cli.test.ts`", "output": "Validation errors are usually presented as a list, indicating the problem and the location within the JSON structure. For example: `❌ instance.basics.name is not of a type(s) string at basics.name.`"}
{"instruction": "What is the purpose of the `sade` package used in `src/cli.ts`?", "input": "Context: `src/cli.ts`", "output": "`sade` is a lightweight library used to create the command-line interface structure for `resumed`. It helps define commands (`render`, `init`, `validate`), their aliases, options (`--theme`, `--output`), and parse command-line arguments."}
{"instruction": "Why might `resumed` be considered 'lightweight'?", "input": "Context: `README.md`", "output": "`resumed` is considered lightweight primarily due to its small codebase size (around 120 lines of code mentioned in the README) and focused feature set, omitting features like built-in PDF export or a preview server found in its predecessor, `resume-cli`."}
{"instruction": "Where can I find examples of how to use `resumed`?", "input": "", "output": "The `resumed` project includes an `examples` directory containing subdirectories that demonstrate usage with a standard JSON Resume theme, a local theme, the Node.js API, and how to implement PDF export using Puppeteer."}
{"instruction": "Generate the command to initialize a resume file named `my_cv.json`.", "input": "", "output": "`resumed init my_cv.json`"}
{"instruction": "Generate the command to render `my_cv.json` using the theme `jsonresume-theme-classy` and save it as `my_cv.html`.", "input": "", "output": "`resumed render my_cv.json --theme jsonresume-theme-classy -o my_cv.html`"}
{"instruction": "Show the help message for the main `resumed` command.", "input": "", "output": "You can display the main help message by running: `resumed --help`. This will list available commands and global options."}
{"instruction": "What is JSON Resume?", "input": "", "output": "JSON Resume is an open-source initiative to create a JSON-based standard for resumes. `resumed` is a tool built to work with this standard."}
{"instruction": "What technology stack is `resumed` primarily built with?", "input": "Context: `README.md`, `*.ts` files", "output": "`resumed` is primarily built using TypeScript and is designed as a Pure ECMAScript Module (ESM) for modern Node.js environments."}